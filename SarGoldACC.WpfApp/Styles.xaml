<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fluent="urn:fluent-ribbon">
    
    <SolidColorBrush x:Key="PrimaryColor" Color="#0D6EFD"/>
    <SolidColorBrush x:Key="PrimaryHoverColor" Color="#0D6EF1"/>
    <SolidColorBrush x:Key="SuccessColor" Color="#198754"/>
    <SolidColorBrush x:Key="SuccessHoverColor" Color="#D1E7DD"/>  
    <SolidColorBrush x:Key="DangerColor" Color="#DC3545"/>
    <SolidColorBrush x:Key="DangerHoverColor" Color="#F8D7DA"/>
    <SolidColorBrush x:Key="WarningColor" Color="#FFC107"/>
    <SolidColorBrush x:Key="WarningHoverColor" Color="#FFF3CD"/>
    <SolidColorBrush x:Key="InfoColor" Color="#0DCAF0"/>
    <SolidColorBrush x:Key="InfoHoverColor" Color="#CFF4FC"/>
    <SolidColorBrush x:Key="DarkColor" Color="#212529"/>
    <SolidColorBrush x:Key="DarkHoverColor" Color="#CED4DA"/>


    
    
    <Style x:Key="TitleText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="36"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="TextAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="5 5 5 5"></Setter>
        <Setter Property="Foreground" Value="#ffffff"></Setter>
    </Style>
    <Style x:Key="NormalText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="FontWeight" Value="Light"></Setter>
        <Setter Property="TextAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="#ffffff"></Setter>
        <Setter Property="Margin" Value="5 5 5 5"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
    </Style>
    <Style x:Key="PrimaryBtn" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/> 
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5 5 5 5"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#6c757d"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#6c757d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddCounterpartyButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource SuccessColor}"/> 
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5 5 5 5"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SuccessColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0 6 6 0"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SuccessHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SuccessHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#6c757d"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#6c757d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SuccessBtn" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource SuccessColor}"/> 
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5 5 5 5"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SuccessColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SuccessHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SuccessHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#6c757d"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#6c757d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DangerBtn" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource DangerColor}"/> 
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5 5 5 5"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DangerColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DangerHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DangerHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#6c757d"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#6c757d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InputTextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#ced4da"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="0"
                                      VerticalScrollBarVisibility="Hidden"
                                      HorizontalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#86b7fe"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#e9ecef"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#dee2e6"/>
                            <Setter Property="Foreground" Value="#6c757d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InputPasswordBox" TargetType="PasswordBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#ced4da"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="0"
                                      VerticalScrollBarVisibility="Hidden"
                                      HorizontalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#86b7fe"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#e9ecef"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#dee2e6"/>
                            <Setter Property="Foreground" Value="#6c757d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="CustomTabStyle" TargetType="fluent:RibbonTabItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Style.Triggers>
            <!-- تغییر رنگ پس‌زمینه در هنگام انتخاب (Active) -->
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="LightBlue"/>
                <Setter Property="Foreground" Value="White"/> 
          
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="RoundedListBoxStyle" TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10"
                        Padding="{TemplateBinding Padding}">
                        <ScrollViewer Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#CCC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>
    
    <Style x:Key="ValidatedTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource InputTextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="Red"/>
                <Setter Property="BorderThickness" Value="2"/>
                <!-- ToolTip تنظیم -->
                <Setter Property="ToolTip"
                        Value="{Binding (Validation.Errors)[0].ErrorContent, 
                                    RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    
</ResourceDictionary>